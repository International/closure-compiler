h1. The Closure Compiler (as a Ruby Gem)

The *closure-compiler* gem is a super-thin wrapper around the "Google Closure Compiler":http://code.google.com/closure/compiler/ for JavaScript compression.

The Closure Compiler's _2009-11-13_ JAR-file is included with the gem, so you'll need *Java 6* installed in order to run the compiler.

h2. Installation

  sudo gem install closure-compressor --source http://gemcutter.org
  
h2. Usage

The @Closure::Compiler@ has a single method, @compile@, which can be passed a string or an open @IO@ object, and returns the compiled JavaScript. The result is returned as a string, or, if a block is passed, yields as an @IO@ object for streaming writes.

  require 'rubygems'
  require 'closure-compiler'
  Closure::Compiler.new.compile(File.open('underscore.js', 'r'))
  
  => "(function(){var j=this,m=j._;function i(a){......
    
When creating a @Closure::Compiler@, you can pass "any options that the command-line compiler accepts":http://code.google.com/closure/compiler/docs/gettingstarted_app.html, to the initializer and they'll be forwarded. For example, to set the compilation level up a notch:

  closure = Closure::Compiler.new(:compilation_level => 'ADVANCED_OPTIMIZATIONS')
  closure.compile(File.open('underscore.js', 'r'))
  
  => "(function(){var j=this,m=j.h;function i(a){......

The default values of all the compiler flags are identical to the command-line version. The default *compilation_level* is "*SIMPLE_OPTIMIZATIONS*".